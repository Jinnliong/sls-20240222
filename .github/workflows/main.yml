name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for Serverless Application

on:
  push:
    branches:  [ main, "*"]

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event"
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Installation of Dependencies Commands
        run: npm install
      - name: Install Snyk 
        run: npm install -g snyk

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Retrieve Secret
      run: |
        SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id jl-testing)
        echo "Retrieved Secret Value: $SECRET_VALUE"
    - name: Use secret in code 
      run: |
        echo "The secret value is: ${MY_SECRET}" 
      env:
        MY_SECRET: ${{ steps.fetch_secret.outputs.secret_value }}
  scan:
    name: Scan using SNYK
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run Snyk auth
        id: auth
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk dependency scan (pre-deployment)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
        run: snyk iac test --severity-threshold=high
